// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison, prefer_null_aware_operators
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'package:efs_misr/Features/Home/data/models/area.dart';

import 'supadart_header.dart';

class Branch implements SupadartClass<Branch> {
  final BigInt id;
  final BigInt? branchId;
  final String? name;
  final String? name_ar;
  final String? area;
  final DateTime createdAt;
  final Area? areaObject;
  const Branch({
    required this.id,
    this.branchId,
    this.name,
    this.area,
    this.name_ar,
    this.areaObject,
    required this.createdAt,
  });

  static String get table_name => 'branch';
  static String get c_id => 'id';
  static String get c_branchId => 'branch_id';
  static String get c_name => 'name';
  static String get c_area => 'area';
  static String get c_createdAt => 'created_at';
  static String get c_name_ar => 'name_ar';

  static List<Branch> converter(List<Map<String, dynamic>> data) {
    return data.map(Branch.fromJson).toList();
  }

  static Branch converterSingle(Map<String, dynamic> data) {
    return Branch.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    BigInt? id,
    BigInt? branchId,
    String? name,
    String? name_ar,
    String? area,
    DateTime? createdAt,
  }) {
    return {
      if (id != null) 'id': id.toString(),
      if (branchId != null) 'branch_id': branchId.toString(),
      if (name != null) 'name': name,
      if (name_ar != null) 'name_ar': name_ar,
      if (area != null) 'area': area,
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
    };
  }

  static Map<String, dynamic> insert({
    BigInt? id,
    BigInt? branchId,
    String? name,
    String? name_ar,
    String? area,
    DateTime? createdAt,
  }) {
    return _generateMap(
      id: id,
      branchId: branchId,
      name: name,
      name_ar: name_ar,
      area: area,
      createdAt: createdAt,
    );
  }

  static Map<String, dynamic> update({
    BigInt? id,
    BigInt? branchId,
    String? name,
    String? name_ar,
    String? area,
    DateTime? createdAt,
  }) {
    return _generateMap(
      id: id,
      branchId: branchId,
      name: name,
      name_ar: name_ar,
      area: area,
      createdAt: createdAt,
    );
  }

  factory Branch.fromJson(Map<String, dynamic> jsonn) {
    return Branch(
      id: jsonn['id'] != null
          ? BigInt.parse(jsonn['id'].toString())
          : BigInt.from(0),
      branchId: jsonn['branch_id'] != null
          ? BigInt.parse(jsonn['branch_id'].toString())
          : null,
      name: jsonn['name'] != null ? jsonn['name'].toString() : null,
      // area: jsonn['area'] != null ? jsonn['area'].toString() : null,
      areaObject: jsonn['area'] is Map<String, dynamic>
          ? Area.fromJson(jsonn['area'])
          : null,
      name_ar: jsonn['name_ar'] != null ? jsonn['name_ar'].toString() : null,
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : DateTime.fromMillisecondsSinceEpoch(0),
    );
  }

  static Object New({
    BigInt? id,
    BigInt? branchId,
    String? name,
    String? name_ar,
    String? area,
    DateTime? createdAt,
  }) {
    return {
      if (id != null) 'id': id,
      if (branchId != null) 'branch_id': branchId,
      if (name != null) 'name': name,
      if (area != null) 'area': area,
      if (createdAt != null) 'created_at': createdAt,
      if (name_ar != null) 'name_ar': name_ar,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      branchId: branchId,
      name: name,
      name_ar: name_ar,
      area: area,
      createdAt: createdAt,
    );
  }

  static const _unset = Object();
  Branch copyWith({
    Object? id = _unset,
    Object? branchId = _unset,
    Object? name = _unset,
    Object? name_ar = _unset,
    Object? area = _unset,
    Object? createdAt = _unset,
  }) {
    return Branch(
      id: id == _unset ? this.id : id as BigInt,
      branchId: branchId == _unset ? this.branchId : branchId as BigInt?,
      name: name == _unset ? this.name : name as String?,
      name_ar: name_ar == _unset ? this.name_ar : name_ar as String?,
      area: area == _unset ? this.area : area as String?,
      createdAt: createdAt == _unset ? this.createdAt : createdAt as DateTime,
    );
  }
}
