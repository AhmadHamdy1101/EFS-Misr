// ignore_for_file: non_constant_identifier_names, camel_case_types, file_namesimport, file_names, unnecessary_null_comparison
// WARNING: This code is auto-generated by Supadart.
// WARNING: Modifications may be overwritten. Please make changes in the Supadart configuration.
import 'supadart_header.dart';

class Users implements SupadartClass<Users> {
  final String id;
  final DateTime createdAt;
  final String? userName;
  final String email;
  final String? companyEmail;
  final String? phone;
  final String? address;
  final int? position;
  final String? positionName;
  final double? salary;
  final int? status;
  final String? statusName;

  Users( {
    required this.id,
    required this.createdAt,
    this.userName,
    required this.email,
    this.companyEmail,
    this.phone,
    this.address,
    this.position,
    this.salary,
    this.status,
    this.positionName, this.statusName,
  });

  static String get table_name => 'users';

  static String get c_id => 'id';

  static String get c_createdAt => 'created_at';

  static String get c_name => 'username';

  static String get c_email => 'email';

  static String get c_password => 'password';

  static String get c_companyEmail => 'company_email';

  static String get c_phone => 'phone';

  static String get c_address => 'address';

  static String get c_position => 'position';

  static String get c_salary => 'salary';

  static String get c_status => 'status';

  static List<Users> converter(List<Map<String, dynamic>> data) {
    return data.map(Users.fromJson).toList();
  }

  static Users converterSingle(Map<String, dynamic> data) {
    return Users.fromJson(data);
  }

  static Map<String, dynamic> _generateMap({
    String? id,
    DateTime? createdAt,
    String? userName,
    required String email,
    String? companyEmail,
    String? phone,
    String? address,
    int? position,
    double? salary,
    int? status,
  }) {
    return {
      if (id != null) 'id': id.toString(),
      if (createdAt != null) 'created_at': createdAt.toUtc().toIso8601String(),
      if (userName != null) 'username': userName,
      if (email != null) 'email': email,
      if (companyEmail != null) 'company_email': companyEmail,
      if (phone != null) 'phone': phone,
      if (address != null) 'address': address,
      if (position != null) 'position': position,
      if (salary != null) 'salary': salary,
      if (status != null) 'status': status,
    };
  }

  static Map<String, dynamic> insert({
    String? id,
    DateTime? createdAt,
    String? userName,
    required String email,
    String? companyEmail,
    String? phone,
    String? address,
    int? position,
    double? salary,
    int? status,
  }) {
    return _generateMap(
      id: id,
      createdAt: createdAt,
      userName: userName,
      email: email,
      address: address,
      companyEmail: companyEmail,
      phone: phone,
      position: position,
      salary: salary,
      status: status,
    );
  }

  static Map<String, dynamic> update({
    String? id,
    DateTime? createdAt,
    String? userName,
    required String email,
    String? companyEmail,
    String? phone,
    String? address,
    int? position,
    double? salary,
    int? status,
  }) {
    return _generateMap(
      id: id,
      createdAt: createdAt,
      userName: userName,
      email: email,
      address: address,
      companyEmail: companyEmail,
      phone: phone,
      position: position,
      salary: salary,
      status: status,
    );
  }

  factory Users.fromJson(Map<String, dynamic> jsonn) {
    return Users(
      id:jsonn['id'] != null ? jsonn['id'].toString() : '',
      createdAt: jsonn['created_at'] != null
          ? DateTime.parse(jsonn['created_at'].toString())
          : DateTime.fromMillisecondsSinceEpoch(0),
      userName: jsonn['username'] != null ? jsonn['username'].toString() : '',
      email: jsonn['email'] != null ? jsonn['email'].toString() : '',
      companyEmail: jsonn['company_email'] != null
          ? jsonn['company_email'].toString()
          : '',
      phone: jsonn['phone'] != null ? jsonn['phone'].toString() : '',
      address: jsonn['address'] != null ? jsonn['address'].toString() : '',
      position: jsonn['position'] ?? 0,
      salary: jsonn['salary'] != null
            ? (jsonn['salary'] as num).toDouble()
            : 0.0,
      status: jsonn['status'] ?? 0,
      positionName: jsonn['position_obj']?['name']?.toString(),
      statusName: jsonn['status_obj']?['name']?.toString(),
    );
  }

  static Object New({
    String? id,
    DateTime? createdAt,
    String? userName,
    required String email,
    String? companyEmail,
    String? phone,
    String? address,
    int? position,
    double? salary,
    int? status,
  }) {
    return {
      if (id != null) 'id': id,
      if (createdAt != null) 'created_at': createdAt,
      if (userName != null) 'username': userName,
      if (email != null) 'email': email,
      if (companyEmail != null) 'company_email': companyEmail,
      if (phone != null) 'phone': phone,
      if (address != null) 'address': address,
      if (position != null) 'position': position,
      if (salary != null) 'salary': salary,
      if (status != null) 'status': status,
    };
  }

  Map<String, dynamic> toJson() {
    return _generateMap(
      id: id,
      createdAt: createdAt,
      userName: userName,

      email: email,
      companyEmail: companyEmail,
      phone: phone,
      address: address,
      position: position,
      salary: salary,
      status: status,
    );
  }

  Users copyWith({
    String? id,
    DateTime? createdAt,
    String? name,
    String? password,
    String? email,
    String? companyEmail,
    String? phone,
    String? address,
    int? position,
    double? salary,
    int? status,
  }) {
    return Users(
      id: id ?? this.id,
      createdAt: createdAt ?? this.createdAt,
      userName: userName ?? userName,
      email: email ?? this.email,
      companyEmail: companyEmail ?? this.companyEmail,
      phone: phone ?? this.phone,
      address: address ?? this.address,
      position: position ?? this.position,
      salary: salary ?? this.salary,
      status: status ?? this.status,
    );
  }
}
